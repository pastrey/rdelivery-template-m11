/*
	Database schema
	Pay attention to the names, types and properties of the columns.
*/

// *** Tables definitions ***

Table users {
  id int [pk]
  name varchar [not null]
  email varchar [not null, unique]
}


Table addresses {
  id int [pk]
  street_address varchar [not null]
  city varchar [not null]
  postal_code varchar [not null]
}


Table employees {
  id int [pk]
  user_id int [not null, unique]
  address_id int [not null]
  phone varchar [not null]
  email varchar
}


Table restaurants {
  id int [pk]
  user_id int [not null]
  address_id int [not null, unique]
  phone varchar [not null]
  email varchar
  name varchar [not null]
  price_range int [not null, default: 1] // 1-3
  active boolean [not null, default: true]
}


Table customers {
  id int [pk]
  user_id int [not null, unique]
  address_id int [not null]
  phone varchar [not null]
  email varchar
  active boolean [not null, default: true]
}



Table products {
  id int [pk]
  restaurant_id int [not null]
  name varchar [not null]
  description varchar
  cost int [not null] // >= 0
}


Table order_statuses {
  id int [pk]
  name varchar [not null] // pending, in progress, delivered
}

Table orders {
  id int [pk]
  restaurant_id int [not null]
  customer_id int [not null]
  order_status_id int [not null]
  restaurant_rating int // 1-5
}

/*
  - Cannot create two product_orders with the same product_id for the same order
  - Must belong to the same restaurant as the order
*/

Table product_orders {
  id int [pk]
  product_id int [not null]
  order_id int [not null]
  product_quantity int [not null] // > 0
  product_unit_cost int [not null] // >= 0
}

// *** Relationships ***

Ref: product_orders.order_id > orders.id
Ref: products.restaurant_id > restaurants.id
Ref: orders.order_status_id > order_statuses.id
Ref: product_orders.product_id > products.id
Ref: orders.restaurant_id > restaurants.id
Ref: orders.customer_id > customers.id
Ref: employees.address_id > addresses.id
Ref: customers.address_id > addresses.id
Ref: restaurants.address_id > addresses.id
Ref: restaurants.user_id > users.id
Ref: employees.user_id - users.id
Ref: customers.user_id - users.id
